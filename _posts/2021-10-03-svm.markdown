---
layout: post
title:  "An overview of SVM and why I like the algorithm so much"
date:   2021-10-03 00:00:00 +0700
tags: 
comments: true
featured: false
---

Hey everyone! So, I recently used Support Vector Machines (SVM) in my final project for a course in my second year and I wanted to share my experience with all of you. In this post, I'll give a quick rundown of what SVM is, its usage, and some examples to help you understand it better. And if you're interested in learning more, I'll also suggest some reading materials at the end.

### So, what is SVM?

SVM is a type of supervised machine learning algorithm used for classification and regression analysis. It's called a "Support Vector Machine" because it creates a line or a hyperplane (in higher dimensions) that separates the data into classes in the best possible way. This line or hyperplane is called the "decision boundary."

The goal of SVM is to find the best decision boundary that maximizes the margin between the classes. The margin is the distance between the decision boundary and the closest data points from each class, also known as "support vectors."

### Usage

SVM is used for binary classification problems, where the data can be separated into two classes, and multi-class classification problems, where the data can be separated into more than two classes. SVM can also be used for regression analysis, where the goal is to predict a continuous output value for a given input.

### Examples

Here are a few examples of where SVM can be used:

* Handwritten digit recognition: SVM can be used to classify handwritten digits into their corresponding numbers (0-9).
* Face recognition: SVM can be used to classify an image as a face or not a face.
* Spam email filtering: SVM can be used to classify emails as spam or not spam.

These are just a few examples, but SVM has a wide range of applications in fields such as biology, finance, and text classification.

I've found it to be a very effective tool for solving a variety of problems.

### Here are some reasons why I love using SVM

* Robustness: SVM is known for its robustness in handling noisy data and high dimensional data. It also has a regularization parameter, which helps to prevent overfitting, making it a great choice for real-world data that can be messy and complex.
* Non-linear decision boundaries: SVM can handle non-linear decision boundaries by transforming the data into a higher-dimensional space where a linear boundary can be found. This is a big advantage, as many real-world problems have non-linear relationships between the input and output variables.
* Versatility: SVM can be used for binary classification problems, where the data can be separated into two classes, and multi-class classification problems, where the data can be separated into more than two classes. It can also be used for regression analysis, where the goal is to predict a continuous output value for a given input.
* Interpreting results: The decision boundary found by SVM is determined by the support vectors, which are the closest data points to the boundary. This makes it easy to interpret the results and understand why a particular data point was classified the way it was.
* Good performance: SVM has been shown to have good performance in a variety of applications, including text classification, image classification, and bioinformatics. In many cases, it has been found to outperform other popular machine learning algorithms, such as decision trees and neural networks.

These are just a few of the reasons why I love using SVM in my data analysis projects. Whether I'm working on a binary classification problem or a regression analysis, SVM has proven to be a valuable tool in helping me find meaningful insights from my data.

If you're interested in learning more about SVM, 

### I suggest checking out these resources

1. "An Introduction to Support Vector Machines" by Nello Cristianini and John Shawe-Taylor
2. "The Elements of Statistical Learning" by Trevor Hastie, Robert Tibshirani, and Jerome Friedman
3. Coursera's "Machine Learning" course by Andrew Ng

I hope this post helped you understand SVM better! Let me know if you have any questions or if there's anything else you'd like me to explain.
